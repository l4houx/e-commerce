security:
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'

    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: username
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            lazy: true
            provider: app_user_provider
            #entry_point: App\Security\AuthenticationEntryPoint
            #user_checker: App\Security\UserChecker
            custom_authenticator: App\Security\Authenticator
            logout:
                path: signout
                # where to redirect after signout
                target: home
            remember_me:
                secret: '%kernel.secret%'
                lifetime: 2592000 # 1 month in seconds
                path: /
                always_remember_me: true

            switch_user: true
            #access_denied_handler: App\Security\AccessDeniedHandler

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^(.*?)/signin, roles: PUBLIC_ACCESS }
        - { path: ^(.*?)/signup, roles: PUBLIC_ACCESS }
        - { path: ^(.*?)/%website_dashboard_path%/admin, roles: ROLE_TEAM }
        - { path: ^(.*?)/%website_dashboard_path%/user, roles: ROLE_USER }

    role_hierarchy:
        ROLE_MODERATOR: [ROLE_TEAM, ROLE_USER]
        ROLE_ADMIN: [ROLE_MODERATOR, ROLE_APPLICATION]
        ROLE_SUPER_ADMIN: [ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]
        ROLE_ADMIN_APPLICATION: ROLE_SUPER_ADMIN

when@test:
    security:
        password_hashers:
            # By default, password hashers are resource intensive and take time. This is
            # important to generate secure password hashes. In tests however, secure hashes
            # are not important, waste resources and increase test times. The following
            # reduces the work factor to the lowest possible values.
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon
